from django.shortcuts import render_to_response
from django.http import HttpResponseRedirect
from fitness.exercises.models import ExerciseType
from fitness.members.models import Member
from time import gmtime

# Create your views here.

def default (request):
    obj_dict = {
        'exercise_list': ExerciseType.objects.all()
        }
    return render_to_response('exercises/default.html', obj_dict)

def add (request):
    # Default to Adam's profile as being the contributor
#    if member_id == None:
#        member_id = 1
    print request.POST
#    if request.POST['type'] == 'lift':
#        LiftType (
#            type = request.POST['name'],
#            created_by = Member.objects.get(id=request.POST['member']),
#            time_created = gmtime()
#            ).save()
#        obj_dict = { 'feedback': "LiftType \"" + request.POST['name'] +
#                     "\" added successfully by " +
#                     Member.objects.get(id=request.POST['member']).firstName + "." }
#    elif request.POST['type'] == 'cardio':
#        CardioType (
#            type = request.POST['name'],
#            created_by = Member.objects.get(id=request.POST['member']),
#            time_created = gmtime()
#            ).save()
#        obj_dict = { 'feedback': "CardioType \"" + request.POST['name'] +
#                     "\" added successfully by " +
#                     Member.objects.get(id=request.POST['member']).firstName + "." }
    ExerciseType (
#        type = get_type_from_string (request.POST['type']),
        type = request.POST['type'],
        name = request.POST['name'],
        created_by = Member.objects.get(id=request.POST['member']),
        time_created = gmtime(),
    ).save()

    obj_dict = {
        'feedback': request.POST['type'] + " \"" + request.POST['name'] +
                    "\" added successfully by " +
                    Member.objects.get(id=request.POST['member']).firstName + ".",
        'exercise_list': ExerciseType.objects.all()
        }
 
    return render_to_response('exercises/default.html', obj_dict)
    
# 'Script' that can be run in browser to clear and initalize the database
# TO DO: Figure out how to directly send output to response
# Move lift and cardio types to a separate app?
#def script_init_workout_types (request):

#    LiftType.objects.all().delete()
#    LiftType(type='Dumbbell Bench Press').save()
#    LiftType(type='Barbell Bench Press').save()
#    LiftType(type='Dumbbell Shoulder Press').save()
#    LiftType(type='Barbell Shoulder Press').save()

#    CardioType.objects.all().delete()
#    CardioType(type='Walk').save()
#    CardioType(type='Run').save()
#    CardioType(type='Jog').save()
#    CardioType(type='Hike').save()
