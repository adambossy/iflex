from django.db import models

from fitness.members.models import Member
from fitness.exercises.models import ExerciseType

class TemplateCollection(models.Model):

    # TODO: ignore fancy week range and all. Each template consists of only one workout right now.
    name = models.CharField(max_length=64)

    author = models.ForeignKey(Member)

    def __unicode__(self):
        return (str(self.id) + ', ' + self.name + ', ' + str(self.author))

class WorkoutTemplate(models.Model):
    
    name = models.CharField(max_length=64, verbose_name='Template Name')

    position = models.IntegerField()

    # name "Workout A", "Upper Body Circuit", "Shoulders and Lats"

    # position (for ordering)

    # Some kind of date repition information ripped from Google Calendar
    # TODO: Should be viewable on a calendar

    # One-to-many relationships between workouts and collections at the moment
    collection = models.ForeignKey(TemplateCollection, verbose_name='My Collections')

    def __unicode__(self):
        return (str(self.id) + ', ' + str(self.collection))

# An exercise that the member has actually completed as part of a workout
# NOTE: Holds mainly just ordering information
class ExerciseTemplate (models.Model): 

    workout_template = models.ForeignKey(WorkoutTemplate)

    # For ordering workout template correctly
    position = models.IntegerField()

    def __str__(self):
        return (str(self.id) + ', ' + str(self.workout_template) + ', ' + str(self.position) + '\n')

class LiftTemplate (models.Model):

    workout_template = models.ForeignKey(WorkoutTemplate)

    # One-to-one
    exercise_template = models.ForeignKey(ExerciseTemplate)

    type = models.ForeignKey(ExerciseType)

    # TODO: Make ranges and other such semantics allowable? Question: what would these added
    # semantics allow us to do? Keep as strings for now.
    # TODO: We probably don't need a max length of 12. What will people actually put here?
    warmup_sets = models.CharField(max_length=12)

    warmup_reps = models.CharField(max_length=12)

    workout_sets = models.CharField(max_length=12)

    workout_reps = models.CharField(max_length=12)

    tempo = models.CharField(max_length=12)

    rest = models.CharField(max_length=12)

    def __str__(self):
        return (str(self.id) + ', ' + str(self.workout_template) + ', ' + str(self.exercise_template) + ', ' + str(self.type) + ', ' + self.warmup_sets + ', ' + self.warmup_reps + ', ' + self.workout_sets + ', ' + self.workout_reps + ', ' + self.tempo + ', ' + self.rest)

# TODO: CardioTemplate
